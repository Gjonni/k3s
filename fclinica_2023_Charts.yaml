apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: fclinica-2023
  namespace: fclinica-2023
spec:
  repo: oci://harbor.k3s.filice.eu/helm/fclinica-2023
  chart: fclinica-2023
  targetNamespace: fclinica-2023
  version: 0.0.1
  valuesContent: |-
    s3:
      enabled: true
      access_key: 8aab5806b1c87cb0a3b963479616a0c7
      secret_key: d36a2462168247222effc11c96d2148f
      bucket: iso-image
      endpoint: https://eu2.contabostorage.com
      path_style: true

    stripe:
      enabled: false

    certmanager:
      enabled: true
      issuer: letsencrypt-dev

    mysql:
      enabled: true
      architecture: standalone
      auth:
        rootPassword: "BULdLrCSduVNM"
        createDatabase: true
        database: "fclinica2023"
        username: "userBYS"
        password: "nhohE0xftrDdxvV5"
        replicationPassword: "H1q83zJN%lLZ"
      primary:
        persistence:
          enabled: true
          existingClaim: ""
          subPath: ""
          storageClass: ""
          annotations: {}
          accessModes:
            - ReadWriteOnce
          size: 20Gi
      secondary:
        persistence:
          enabled: true
          existingClaim: ""
          subPath: ""
          storageClass: ""
          annotations: {}
          accessModes:
            - ReadWriteOnce
          size: 20Gi

    redis:
      enabled: true
      global:
        redis:
          password: "X!t1*v04Z4v1"
      persistence:
        enabled: true
        path: /data
        storageClass: ""
        accessModes:
          - ReadWriteOnce
        size: 10Gi

    fclinica:
      replicaCount: 1
      image:
        repository: harbor.k3s.filice.eu/fclinica/fclinica-2023
        tag: latest
        pullPolicy: IfNotPresent
      imagePullSecrets: []
      nameOverride: ""
      fullnameOverride: ""
      serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # Annotations to add to the service account
        annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: ""
        podAnnotations: {}
        podSecurityContext: {}
          # fsGroup: 2000
        securityContext: {}
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
          # runAsNonRoot: true
          # runAsUser: 1000

      service:
        type: ClusterIP
        ports:
          - name: http
            port: 80
            protocol: TCP
            targetPort: 8080
          - name: https
            port: 443
            protocol: TCP
            targetPort: 8443

      IngressRouteTCP:
        enabled: true
        hosts:
          - host: dev.fclinica.it
            paths:
              - path: /
                pathType: ImplementationSpecific
        passthrough: true
        secretName: fclinica-2023-tls

      ingress:
        enabled: false
        className: ""
        annotations: {}
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        hosts:
          - host: chart-example.local
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls: []
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.local

      resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

      autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 100
        targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80

      nodeSelector: {}

      tolerations: []

      affinity: {}

      labels: {}
