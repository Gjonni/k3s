resources:
  requests:
    cpu: 500m
    memory: 128Mi
  limits:
    cpu: 1000m
    memory: 512Mi

initContainers:
   - name: velero-plugin-for-csi
     image: velero/velero-plugin-for-csi:v0.5.0
     imagePullPolicy: IfNotPresent
     volumeMounts:
       - mountPath: /target
         name: plugins
   - name: velero-plugin-for-aws
     image: velero/velero-plugin-for-aws:v1.7.0
     imagePullPolicy: IfNotPresent
     volumeMounts:
       - mountPath: /target
         name: plugins

livenessProbe:
  httpGet:
    path: /metrics
    port: http-monitoring
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5

readinessProbe:
  httpGet:
    path: /metrics
    port: http-monitoring
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5

extraObjects: []

metrics:
  enabled: true
  scrapeInterval: 30s
  scrapeTimeout: 10s

  service:
    annotations: {}
    labels: {}

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8085"
    prometheus.io/path: "/metrics"

  serviceMonitor:
    autodetect: true
    enabled: false
    annotations: {}
    additionalLabels: {}

  prometheusRule:
    autodetect: true
    enabled: false
    additionalLabels: {}

upgradeCRDs: true

cleanUpCRDs: false

configuration:
  backupStorageLocation:
  - name: default
    provider: aws
    bucket: k3s-backup
    caCert:
    prefix:
    default:
    validationFrequency:
    accessMode: ReadWrite
    credential:
      name:
      key:
    config:
      region: contabo
      s3ForcePathStyle: true
      s3Url: https://eu2.contabostorage.com

  volumeSnapshotLocation:
  - name: default
    provider: aws
    credential:
      name:
      key:
    config: {}

  features: EnableCSI

rbac:
  create: true
  clusterAdministrator: true
  clusterAdministratorName: cluster-admin

serviceAccount:
  server:
    create: true
    name:
    annotations:
    labels:

credentials:
  useSecret: true
  name:
  existingSecret:
  secretContents:
    cloud: |
      [default]
      aws_access_key_id=8aab5806b1c87cb0a3b963479616a0c7
      aws_secret_access_key=d36a2462168247222effc11c96d2148f
  extraEnvVars: {}
  extraSecretRef: ""

backupsEnabled: true
snapshotsEnabled: true
deployNodeAgent: false

